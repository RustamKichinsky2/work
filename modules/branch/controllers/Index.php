<?phpnamespace dvijok\modules\branch;class Index extends \dvijok\core\Core {	public function __construct($path, $data) {				parent::__construct($path, $data);	}		public function add_post() {				$post = $this->input->post();		$t = [];		$t[] = $post['name'];		$this->db->query("INSERT INTO `branch`(`name`) VALUES(?)", $t);		$id = $this->db->insertId();		$obj = new \stdClass();		if($id)		{			$obj->success = true;			$obj->id = $id;		}		else		{			$obj->success = false;		}		return "<pre>".json_encode($obj, JSON_PRETTY_PRINT)."</pre>";	}		public function get($data) {				$t = [];				$t[] = isset($data['params'][0]) ? intval($data['params'][0]) : 0;		$obj = new \stdClass();		$res = $this->db->query("SELECT * FROM `branch` WHERE `id` = ?", $t)->fetch();		if($res)		{			$obj = $res;		}		else		{			$obj->success = false;		}		return "<pre>".json_encode($obj, JSON_PRETTY_PRINT)."</pre>";	}		public function all($data) {				$id = isset($data['params'][0]) ? intval($data['params'][0]) : 0;		$obj = new \stdClass();		$branch = $this->db->query("SELECT * FROM `branch`")->fetchAll();		$users = $this->db->query("SELECT * FROM `users`")->fetchAll();		if($branch)		{						$obj = \dvijok\core\Helper::buildTreeD($branch, $id, $users);			//print_r($obj);					}		else		{			$obj->success = false;		}		return "<pre>".json_encode($obj, JSON_PRETTY_PRINT)."</pre>";			}			public function import_post() {				$post = $this->input->post();		$obj = new \stdClass();		if(\dvijok\core\Helper::importTree(json_decode($post['import']), $this->db))		{			$obj->success = true;		}		else		{			$obj->success = false;		}		return "<pre>".json_encode($obj, JSON_PRETTY_PRINT)."</pre>";							}			public function export($data) {				$id = isset($data['params'][0]) ? intval($data['params'][0]) : 0;				$obj = new \stdClass();		$branch = $this->db->query("SELECT * FROM `branch`")->fetchAll();		$users = $this->db->query("SELECT * FROM `users`")->fetchAll();		if($branch)		{						$obj = \dvijok\core\Helper::buildTreeD($branch, $id, $users);			//print_r($obj);					}		else		{			$obj->success = false;		}		header("Content-type: text/plain");		header("Content-Disposition: attachment; filename=branch.txt");		return json_encode($obj, JSON_PRETTY_PRINT);			}		public function delete_post() {				$post = $this->input->post();		$t = [];		$t[] = $post['id'];		$res = $this->db->query("DELETE FROM `branch` WHERE `id` = ?", $t);		$obj = new \stdClass();		if($res->stmt->affected_rows)		{			$obj->success = true;		}		else		{			$obj->success = false;		}		return "<pre>".json_encode($obj, JSON_PRETTY_PRINT)."</pre>";	}		public function edit_post() {				$post = $this->input->post();		$t = [];		$t[] = $post['name'];		$t[] = $post['id'];		$res = $this->db->query("UPDATE `branch` SET `name` = ? WHERE `id` = ?", $t);		$obj = new \stdClass();		if($res->stmt->affected_rows)		{			$obj->success = true;		}		else		{			$obj->success = false;		}		return "<pre>".json_encode($obj, JSON_PRETTY_PRINT)."</pre>";	}}